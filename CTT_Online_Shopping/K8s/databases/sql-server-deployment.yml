apiVersion: v1
kind: Secret
metadata:
  name: sql-server-secret
type: Opaque
data:
  sa-password: RGV2ZWxvcGVyQDAwMg==
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sql-server
  namespace: default 
spec:
  serviceName: sql-server
  replicas: 1
  selector:
    matchLabels:
      app: sql-server
  template:
    metadata:
      labels:
        app: sql-server
    spec:
      securityContext:
        fsGroup: 10001  # Ensures volume ownership is set to 'mssql' user inside the container
      containers:
        - name: sql-server
          image: mcr.microsoft.com/mssql/server:2019-latest
          ports:
            - containerPort: 1433
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sql-server-secret
                  key: sa-password
            - name: MSSQL_MEMORY_LIMIT_MB
              value: "2048"
          volumeMounts:
            - name: sql-data
              mountPath: /var/opt/mssql
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d  # Optional, if you want to run custom initialization scripts
      initContainers:
        - name: init-permissions
          image: busybox
          command: ['sh', '-c', 'chown -R 10001:10001 /var/opt/mssql']  # Ensures volume permissions are correct
          volumeMounts:
            - name: sql-data
              mountPath: /var/opt/mssql
      volumes:
        - name: sql-data
          persistentVolumeClaim:
            claimName: sql-data-pvc  # Ensure this matches your PVC
        - name: init-sql
          configMap:
            name: sql-init-scripts  # Optional, if using an init script
  volumeClaimTemplates:
    - metadata:
        name: sql-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: sql-server
spec:
  ports:
    - port: 1433
      targetPort: 1433
  clusterIP: None
  selector:
    app: sql-server
